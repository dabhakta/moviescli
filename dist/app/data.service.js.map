{"version":3,"file":"data.service.js","sourceRoot":"","sources":["file:///D:/angularprojects/moviescli/tmp/broccoli_type_script_compiler-input_base_path-glpvtyAd.tmp/0/src/app/data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\ndeclare var firebase: any;\n\n@Injectable()\nexport class DataService {\n\n  movies = [];\n  users = [];\n  stats = [];\n  currentuser: string;\n  movienewid: number;\n  movie: any;\n\n  constructor(private http: Http) {\n    this.fbGetMovies();\n    this.fbGetUsers();\n    this.fbGetStatistics();\n  }\n\n  getMovies() {\n    return this.movies;\n  }\n\n  getUsers() {\n    return this.users;\n  }\n\n  getCurrentUser() {\n    return firebase.auth().currentUser;\n  }\n\n  getSingleMovieId(id: number) {\n    this.fbGetMovies();\n    return this.movies[id];\n  }\n\n  getTotalMovie() {\n    this.fbGetStatistics();\n    return this.stats[0];\n  }\n\n  setCurrentUser() {\n    this.currentuser = firebase.auth().currentUser;\n  }\n\n  registerUser(email: string, password: string) {\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n      alert(error.message);\n    });\n    this.setCurrentUser();\n    this.fbAddUser(email);\n  }\n\n  loginUser(email: string, password: string) {\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n      alert(error.message);\n    });\n    this.setCurrentUser();\n  } \n\n  signoutUser() {\n    firebase.auth().signOut().catch(error => {\n      alert(error.message);\n    });\n    this.currentuser = null;\n  }\n\n  fbGetMovies() {\n    firebase.database().ref('/movies').on('child_added', (snapshot) => {\n      this.movies.push(snapshot.val());\n    });\n    firebase.database().ref('/movies').on('child_changed', (snapshot) => {\n      this.movies.splice(snapshot.key, 1, snapshot.val());\n    });\n    firebase.database().ref('/movies').on('child_removed', (snapshot) => {\n      this.movies.splice(snapshot.key, 1);\n    });\n  }\n\n  fbGetUsers() {\n    firebase.database().ref('/users').on('child_added', (snapshot) => {\n      this.users.push(snapshot.val());\n    });\n    firebase.database().ref('/users').on('child_changed', (snapshot) => {\n      this.users.splice(snapshot.key, 1, snapshot.val());\n    });\n    firebase.database().ref('/users').on('child_removed', (snapshot) => {\n      this.users.splice(snapshot.key, 1);\n    });\n  }\n\n  fbGetStatistics() {\n    firebase.database().ref('/statistics').on('child_added', (snapshot) => {\n      this.stats.push(snapshot.val());\n    });\n    firebase.database().ref('/statistics/').on('child_changed', (snapshot) => {\n      if (snapshot.key === \"totalUsers\") {\n        this.stats.splice(1, 1, snapshot.val());\n      }\n      if (snapshot.key === \"totalMovies\") {\n        this.stats.splice(0, 1, snapshot.val());\n      }\n    });\n  }\n\n  fbUpdateMovies(id: number, mtitle: string, year: number, director: string) {\n    id--;\n    var user: any = this.getCurrentUser();\n    if (user === null) {\n      alert(\"Please log in to edit database.\");\n    } else {\n      firebase.database().ref('/movies/' + id).update({ mtitle: mtitle, year: year, director: director });\n    }\n  }\n\n  fbAddMovies(id: number, mtitle: string, year: number, director: string) {\n    this.movienewid = id;\n    id--;\n    var user: any = this.getCurrentUser();\n    if (user === null) {\n      alert(\"Please log in to edit database.\");\n    } else {\n      var email: any = user.email;\n      firebase.database().ref('/movies/' + id).update({ id: this.movienewid, mtitle: mtitle, year: year, director: director, user: email })\n      firebase.database().ref('/statistics/').update({ totalMovies: this.movienewid });\n    }\n  }\n\n  fbAddUser(email: string) {\n    var userid: number = this.stats[1];\n    firebase.database().ref('/users/' + userid).update({ email: email });\n    userid++;\n    firebase.database().ref('/statistics/').update({ totalUsers: userid });\n  }\n\n  delete(movie) {\n    var user: any = this.getCurrentUser();\n    if (user === null) {\n      alert(\"Please log in to edit database.\");\n    } else {\n      this.movie = this.movies[this.movies.length - 1];\n      if (this.movie.id !== movie.id) {\n        this.fbUpdateMovies(movie.id, this.movie.mtitle, this.movie.year, this.movie.director);\n        firebase.database().ref('/statistics/').update({ totalMovies: this.movie.id - 1 })\n      }\n      this.fbDeleteMovie(this.movie.id);\n    }\n  }\n\n  fbDeleteMovie(id: number) {\n    id--;\n    firebase.database().ref('/movies/' + id).remove();\n    firebase.database().ref('/statistics/').update({ totalMovies: id })\n  }\n}"]}